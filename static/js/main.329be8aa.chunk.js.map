{"version":3,"sources":["TodoItem.tsx","TodoList.tsx","api.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","className","completed","id","user","name","title","TodoList","todos","map","key","getPreparedTodos","a","Promise","all","fetch","then","response","json","todosFromServer","usersFromServer","preparedTodos","find","userId","App","useState","setTodos","initialTodos","setInitialTodos","isLoaded","setLoad","isloading","setLoading","type","onClick","sort","b","localeCompare","ReactDOM","render","document","getElementById"],"mappings":"mQAoCeA,G,MA9B2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3C,OACE,oCACE,yBAAKC,UAAWD,EAAKE,UACjB,uBACA,yBAEF,yBAAKD,UAAU,QACb,0BAAMA,UAAU,YAAYD,EAAKG,IACjC,uBAAGF,UAAU,cAAb,QAEG,IACAD,EAAKI,KAAKC,MAEb,uBAAGJ,UAAU,eAAb,SAEG,IACAD,EAAKM,OAER,uBAAGL,UAAU,gBAAb,UAEG,IACAD,EAAKE,UAAY,YAAc,mBCrB/BK,EAAoC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClD,OACE,yBAAKP,UAAU,cACZO,EAAMC,KAAI,SAACT,GAAD,OACT,kBAAC,EAAD,CAAUA,KAAMA,EAAMU,IAAKV,EAAKG,U,8BCG3BQ,EAAgB,uCAAG,oCAAAC,EAAA,sEACoBC,QAAQC,IAAI,CALvDC,MATa,8CAUjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UANtBH,MALa,8CAMjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YAQC,0CACvBC,EADuB,KACLC,EADK,KAExBC,EAAgBF,EAAgBV,KAAI,SAACT,GAAD,mBAAC,eACtCA,GADqC,IAExCI,KAAMgB,EAAgBE,MAAK,SAAClB,GAAD,OAAgBA,EAAKD,KAAOH,EAAKuB,eAJhC,kBAOvBF,GAPuB,2CAAH,qDC6EdG,EAtFO,WAAO,IAAD,EACAC,mBAAyB,IADzB,mBACnBjB,EADmB,KACZkB,EADY,OAEcD,mBAAyB,IAFvC,mBAEnBE,EAFmB,KAELC,EAFK,OAGEH,oBAAkB,GAHpB,mBAGnBI,EAHmB,KAGTC,EAHS,OAIML,oBAAkB,GAJxB,mBAInBM,EAJmB,KAIRC,EAJQ,KAmC1B,OACE,yBAAK/B,UAAU,aACb,qDACE4B,EAWE,oCACE,yBAAK5B,UAAU,qBACb,4BACEA,UAAU,SACVgC,KAAK,SACLC,QAvBQ,WACpBR,EAASC,KAmBC,mBAMA,4BACE1B,UAAU,SACVgC,KAAK,SACLC,QA5CM,WAClBR,EAAS,YAAIlB,GACV2B,MAAK,SAACvB,EAAGwB,GAAJ,OAAUxB,EAAEN,MAAM+B,cAAcD,EAAE9B,aAuChC,iBAOA,4BACEL,UAAU,SACVgC,KAAK,SACLC,QAzCK,WACjBR,EAAS,YAAIlB,GACV2B,MAAK,SAACvB,EAAGwB,GAAJ,OAAUxB,EAAER,KAAKC,KAAKgC,cAAcD,EAAEhC,KAAKC,YAoCzC,gBAOA,4BACEJ,UAAU,SACVgC,KAAK,SACLC,QArDO,WACnBR,EAAS,YAAIlB,GACV2B,MAAK,SAACvB,EAAGwB,GAAJ,OAAWA,EAAElC,WAAaU,EAAEV,gBAgD1B,mBAQF,kBAAC,EAAD,CAAUM,MAAOA,KAvCnB,4BACEyB,KAAK,SACLhC,UAAU,SACViC,QArCU,WAClBF,GAAW,GACTrB,IAAmBK,MAAK,SAACG,GACvBO,EAASP,GACTS,EAAgBT,GAChBW,GAAQ,GACRE,GAAW,QAiCND,EAAY,aAAe,mBC9CxCO,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.329be8aa.chunk.js","sourcesContent":["import React from 'react';\n\ntype TodoItemProps = {\n  todo: PreparedTodo;\n};\n\nconst TodoItem: React.FC<TodoItemProps> = ({ todo }) => {\n  return (\n    <>\n      <div className={todo.completed\n        ? 'user__completed-true'\n        : 'user__completed-false'}\n      >\n        <div className=\"user\">\n          <span className=\"user__id\">{todo.id}</span>\n          <p className=\"user__name\">\n            Name:\n            {' '}\n            {todo.user.name}\n          </p>\n          <p className=\"user__title\">\n            Title:\n            {' '}\n            {todo.title}\n          </p>\n          <p className=\"user__status\">\n            Status:\n            {' '}\n            {todo.completed ? 'completed' : 'in procces'}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\ntype TodoListProps = {\n  todos: PreparedTodo[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <div className=\"todo__list\">\n      {todos.map((todo) => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </div>\n  );\n};\n","const API_USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nconst API_TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\n\n\nexport const getUsers = () => {\n  return fetch(API_USERS_URL)\n    .then(response => response.json());\n};\n\nexport const getTodos = () => {\n  return fetch(API_TODOS_URL)\n    .then(response => response.json());\n};\n\nexport const getPreparedTodos = async () => {\n  const [todosFromServer , usersFromServer] = await Promise.all([getTodos(), getUsers()]);\n  const preparedTodos = todosFromServer.map((todo: Todo) => ({\n    ...todo,\n    user: usersFromServer.find((user: User) => user.id === todo.userId),\n  }));\n\n  return preparedTodos;\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { TodoList } from './TodoList';\nimport { getPreparedTodos } from './api';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<PreparedTodo[]>([]);\n  const [initialTodos, setInitialTodos] = useState<PreparedTodo[]>([]);\n  const [isLoaded, setLoad] = useState<boolean>(false);\n  const [isloading, setLoading] = useState<boolean>(false);\n\n  const loadedTodos = () => {\n    setLoading(true);\n      getPreparedTodos().then((todosFromServer) => {\n        setTodos(todosFromServer);\n        setInitialTodos(todosFromServer);\n        setLoad(true);\n        setLoading(false);\n      });\n  };\n\n  const sortByTitle = () => {\n    setTodos([...todos]\n      .sort((a, b) => a.title.localeCompare(b.title)));\n  };\n\n  const sortByStatus = () => {\n    setTodos([...todos]\n      .sort((a, b) => +b.completed - +a.completed));\n  };\n\n  const sortByName = () => {\n    setTodos([...todos]\n      .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n  };\n\n  const resetAllTodos = () => {\n    setTodos(initialTodos);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Dynamic list of TODOs</h1>\n      {!isLoaded\n        ? (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={loadedTodos}\n          >\n            {isloading ? 'Loading...' : 'Click to Load'}\n          </button>\n        )\n        : (\n          <>\n            <div className=\"button__container\">\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={resetAllTodos}\n                >Reset All Todos\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={sortByTitle}\n              >\n                Sort By Title\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={sortByName}\n              >\n                Sort By Name\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={sortByStatus}\n              >\n                Sort By Status\n              </button>\n            </div>\n            <TodoList todos={todos} />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}